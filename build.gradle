// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.3.41'
    repositories {
        google()
        jcenter()
        
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

project.ext {
    kotlin = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    ktx = "androidx.core:core-ktx:1.0.2"

    versions = [
            androidx    : "1.0.0",
            appcompat   : "1.0.2",
            annocation  : "1.0.0",
            material    : "1.1.0-alpha05",
            constraintLayout: "1.1.3",
    ]

    appcompat = "androidx.appcompat:appcompat:${versions.appcompat}"
    annotation = "androidx.annotation:annotation:${versions.annotation}"
    material = "com.google.android.material:material:${versions.material}"
    cardView = "androidx.cardview:cardview:${versions.androidx}"
    recyclerView = "androidx.recyclerview:recyclerview:${versions.androidx}"
    constraintLayout = "androidx.constraintlayout:constraintlayout:${versions.constraintLayout}"

    retrofit = "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    retrofitGsonConverter = "com.squareup.retrofit2:converter-gson:${versions.retrofit}"
    retrofitRxJava2Adapter = "com.squareup.retrofit2:adapter-rxjava2:${versions.retrofit}"
    okHttpLogging = "com.squareup.okhttp3:logging-interceptor:${versions.okHttp}"
    okHttp = "com.squareup.okhttp3:okhttp:${versions.okHttp}"

    rxJava = "io.reactivex.rxjava2:rxjava:${versions.rxJava}"
    rxAndroid = "io.reactivex.rxjava2:rxandroid:${versions.rxAndroid}"
    rxRelay = "com.jakewharton.rxrelay2:rxrelay:${versions.rxRelay}"
    rxRedux = "com.freeletics.rxredux:rxredux:${versions.rxRedux}"

    room = "androidx.room:room-runtime:${versions.room}"
    roomCompiler = "androidx.room:room-compiler:${versions.room}"
    roomRx = "androidx.room:room-rxjava2:${versions.room}"
    roomTestHelper = "androidx.room:room-testing:${versions.room}"

    lifecycleExtensions = "androidx.lifecycle:lifecycle-extensions:${versions.androidxLifecycle}"
    lifecycleCompiler = "androidx.lifecycle:lifecycle-common-java8:${versions.androidxLifecycle}"
    archCoreTesting = "androidx.arch.core:core-testing:${versions.arch}"

    dagger = "com.google.dagger:dagger:${versions.dagger}"
    daggerAndroid = "com.google.dagger:dagger-android:${versions.dagger}"
    daggerCompiler = "com.google.dagger:dagger-compiler:${versions.dagger}"
    daggerAndroidCompiler = "com.google.dagger:dagger-android-processor:${versions.dagger}"
    daggerSupport = "com.google.dagger:dagger-android-support:${versions.dagger}"

    // unit testing
    junit = "junit:junit:${versions.junit}"
    junitParams = "pl.pragmatists:JUnitParams:${versions.junitParams}"
    hamcrest = "org.hamcrest:hamcrest-library:${versions.hamcrest}"
    mockito = "org.mockito:mockito-core:${versions.mockito}"
    mockitoKotlin = "com.nhaarman.mockitokotlin2:mockito-kotlin:${versions.mockitoKotlin}"
    mockitoAndroid = "org.mockito:mockito-android:${versions.mockito}"
    androidTestRunner = "androidx.test:runner:${versions.testRunner}"
    androidTestRules = "androidx.test:rules:${versions.testRunner}"
    robolectric = "org.robolectric:robolectric:${versions.robolectric}"
}